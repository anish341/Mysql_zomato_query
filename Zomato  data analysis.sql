-- Retrieve the total nummber of orders placed 
-- calculator the total revenue generated from pizza saless
-- identify the highest priced pizaa
-- identify the most common pizza size orderd
-- list the top 5 most ordered pizza ,type along with their quantities
-- join the necessary tables to find the total quantity of each pzza category ordered
-- determine the distribution  of orders by hour of the day
-- Join relevent tables to find the category wise distribution  of pizzas
-- group the orders by date and calculate the average number of pizza of pizzas ordered per day 
-- dermine the top 3 most ordered pizza types based on revenue
-- Calculate the contribution of each  pizza type to tatol revenue
-- Calculate the contribution of each  pizza type to tatol revenue
-- analyze the cumulative revenue generated over time
-- dermine the top 3 most ordered pizza types based on revenue for each pizza category

SELECT * FROM  ZOMATO.ORDER_DETAILS;
SELECT COUNT(ORDER_ID) FROM ZOMATO.ORDER_DETAILS;

SELECT MAX(ORDER_ID) FROM ZOMATO.ORDER_DETAILS;
SELECT ORDER_ID FROM ZOMATO.ORDER_DETAILS
WHERE  ORDER_ID BETWEEN 2 AND 10;

SELECT COUNT(PIZZA_ID)AS COUNT_FIRST_LITTER FROM 
(SELECT * FROM  ZOMATO.ORDER_DETAILS
WHERE PIZZA_ID LIKE 'B%') AS A;

SELECT COUNT(PIZZA_ID) FROM
(SELECT
DISTINCT(PIZZA_ID) FROM
(SELECT * FROM  ZOMATO.ORDER_DETAILS
WHERE  PIZZA_ID NOT LIKE'%M') AS B) AS C;

SELECT * FROM ZOMATO.ORDERS;
SELECT * FROM ZOMATO.ORDERS
WHERE ORDER_ID IN (2, 3 , 5);

SELECT * FROM ZOMATO.ORDERS
WHERE ORDER_ID >10;

SELECT * FROM ZOMATO.PIZZA_TYPES;

SELECT * FROM ZOMATO.PIZZA_TYPES
ORDER BY PIZZA_TYPE_ID  desc LIMIT 5;

SELECT NAME, PIZZA_TYPE_ID FROM ZOMATO.PIZZA_TYPES
ORDER BY NAME ;

SELECT * FROM ZOMATO.PIZZAS;

SELECT COUNT(PIZZA_ID) FROM
(SELECT PIZZA_ID,COUNT(SIZE)  FROM ZOMATO.PIZZAS
WHERE SIZE LIKE 'S' GROUP BY PIZZA_ID) AS A;

SELECT PIZZA_ID ,SIZE FROM ZOMATO.PIZZAS
WHERE SIZE IN ('M');

SELECT COUNT(ORDER_ID)AS TOTAL_ORDERS
FROM ZOMATO.ORDERS;

USE ZOMATO;
SELECT SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)
AS TOTAL_SALES
FROM ZOMATO.ORDER_DETAILS
JOIN PIZZAS ON PIZZAS.PIZZA_ID =ORDER_DETAILS.PIZZA_ID;

SELECT PIZZA_TYPES.NAME,
PIZZAS.PRICE FROM ZOMATO.PIZZA_TYPES 
JOIN PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID =PIZZAS.PIZZA_TYPE_ID 
ORDER BY PIZZAS.PRICE DESC ; 

SELECT PIZZAS.SIZE, COUNT(ORDER_DETAILS.ORDER_DETAILS_ID) AS ORDER_COUNT 
FROM ZOMATO.PIZZAS 
JOIN ORDER_DETAILS
ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY PIZZAS.SIZE 
ORDER BY ORDER_COUNT DESC;

SELECT PIZZA_TYPES.NAME, 
SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY  
FROM ZOMATO.PIZZA_TYPES
JOIN PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID
JOIN ORDER_DETAILS 
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID 
GROUP BY PIZZA_TYPES.NAME
ORDER BY QUANTITY 
LIMIT 5 ;

SELECT PIZZA_TYPES.CATEGORY, 
SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY 
FROM ZOMATO.PIZZA_TYPES
JOIN ZOMATO.PIZZAS 
ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID 

JOIN ZOMATO.ORDER_DETAILS 
ON ORDER_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID

GROUP BY PIZZA_TYPES.CATEGORY 
ORDER BY QUANTITY DESC;

SELECT HOUR(TIME) AS HOUR,COUNT(ORDER_ID) AS ORDER_COUNT FROM ZOMATO.ORDERS
GROUP BY HOUR(TIME);

SELECT CATEGORY ,COUNT(NAME) FROM ZOMATO.PIZZA_TYPES
GROUP BY CATEGORY;

SELECT AVG(ORDER_QUANTITY.TOTAL_QUANTITY) AS AVERAGE_QUANTITY
FROM (SELECT ORDERS.DATE, 
SUM(ORDER_DETAILS.QUANTITY) AS TOTAL_QUANTITY
FROM ORDERS 

JOIN ORDER_DETAILS 
ON ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID

GROUP BY 
ORDERS.DATE
) AS ORDER_QUANTITY;

SELECT PIZZA_TYPES.NAME ,ORDER_DETAILS.QUANTITY *PIZZAS.PRICE AS REVENUE
FROM ZOMATO.PIZZA_TYPES
	JOIN PIZZAS 
    ON PIZZAS.PIZZA_TYPE_ID =PIZZA_TYPES.PIZZA_TYPE_ID
JOIN ORDER_DETAILS 
	ON ORDER_DETAILS.PIZZA_ID =PIZZAS.PIZZA_ID
ORDER BY REVENUE DESC LIMIT 3;

SELECT PIZZA_TYPES.CATEGORY ,ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE),2) AS REVENUE
FROM ZOMATO.PIZZA_TYPES 

JOIN PIZZAS ON PIZZAS.PIZZA_TYPE_ID =PIZZA_TYPES.PIZZA_TYPE_ID

JOIN ORDER_DETAILS ON ORDER_DETAILS.PIZZA_ID =PIZZAS.PIZZA_ID
GROUP BY  PIZZA_TYPES.CATEGORY ORDER BY REVENUE DESC;


SELECT `DATE`, SUM(REVENUE) OVER(ORDER BY `DATE`) AS CUM_REVENUE
FROM 
(SELECT ORDERS.DATE, SUM(ORDER_DETAILS.QUANTITY *PIZZAS.PRICE) AS REVENUE 
FROM ORDER_DETAILS 

JOIN PIZZAS ON ORDER_DETAILS.PIZZA_ID =PIZZAS.PIZZA_ID
 
JOIN ORDERS ON ORDERS.ORDER_ID =ORDER_DETAILS.ORDER_ID

GROUP BY ORDERS.DATE ORDER BY REVENUE ) AS SALES;

SELECT NAME,REVENUE ,RN FROM 
(SELECT CATEGORY,NAME , REVENUE, RANK() OVER(PARTITION BY CATEGORY  ORDER BY REVENUE DESC) AS RN 
FROM 
(SELECT PIZZA_TYPES.CATEGORY, PIZZA_TYPES.NAME,
SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) AS REVENUE 
FROM PIZZA_TYPES

JOIN PIZZAS ON PIZZA_TYPES.PIZZA_TYPE_ID =PIZZAS.PIZZA_TYPE_ID

JOIN ORDER_DETAILS ON  ORDER_DETAILS.PIZZA_ID =PIZZAS.PIZZA_ID

GROUP BY PIZZA_TYPES.CATEGORY, PIZZA_TYPES.NAME
ORDER BY REVENUE) AS A ) AS B 
WHERE RN<=3;

 